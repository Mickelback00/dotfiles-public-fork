#!/bin/bash
set -e

if ! [ -L ~/.gnupg ] || ! [ -L ~/.ssh ]; then
  echo "Run script/setup first!" >&2
  exit 1
fi

onepassword_login() {
  if ! command -v op >/dev/null; then
    echo "Install op first!" >&2
    exit 1
  fi

  # shellcheck disable=SC2154
  if [ -z "$OP_SESSION_EOPPIAL2HBE3ZNVDJUBFICNHJU" ]; then
    echo "Logging into 1Password..."
    eval "$(op signin --account mcquaid.1password.com)"
  fi
}

onepassword_get() {
  if [ -f "$HOME/$2" ]; then
    echo "$2 already exists."
    return
  fi
  echo "Extracting $2..."
  onepassword_login
  op document get "$1" >"$HOME/$2"
  chmod 600 "$HOME/$2"
}

onepassword_get xrenp5t62jem7nz6arxaswsica .ssh/id_ed25519
onepassword_get zagw7lmcsbhszhkfpxeacdyhza .ssh/id_rsa
onepassword_get wtwm6itew5aldhib7ixx6l2r7q .gnupg/mike@mikemcquaid.com.private.gpg-key

echo "Storing SSH keys in keychain..."
ssh-add --apple-use-keychain

echo "Setting up GPG..."
if ! command -v gpg >/dev/null; then
  echo "Install GPG first!" >&2
  exit 1
fi

if ! command -v pinentry-mac >/dev/null; then
  echo "Install Pinentry for GPG on Mac first!" >&2
  exit 1
fi

if ! [ -f "$HOME/.gnupg/gpg-agent.conf" ]; then
  echo "pinentry-program $(which pinentry-mac)" >"$HOME/.gnupg/gpg-agent.conf"
fi

gpgconf --kill gpg-agent
gpgconf --launch gpg-agent

chmod 700 ~/.gnupg
gpg --import ~/.gnupg/mike@mikemcquaid.com.public.gpg-key \
  ~/.gnupg/mike@mikemcquaid.com.private.gpg-key
